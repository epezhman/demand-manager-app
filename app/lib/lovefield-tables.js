'use strict'

module.exports = makeTables

const lf = require('lovefield')

function makeTables(schemaBuilder) {
    schemaBuilder.createTable('Battery')
        .addColumn('id', lf.Type.INTEGER)
        .addColumn('estimated_power_consume_w', lf.Type.INTEGER)
        .addColumn('estimated_power_save_w', lf.Type.INTEGER)
        .addColumn('ac_connected_bool', lf.Type.BOOLEAN)
        .addColumn('day_of_week', lf.Type.STRING)
        .addColumn('hour_index', lf.Type.INTEGER)
        .addColumn('minute_index', lf.Type.INTEGER)
        .addColumn('time', lf.Type.DATE_TIME)
        .addPrimaryKey(['id'], true)
        .addIndex('idx_day_of_week', ['day_of_week'], false, lf.Order.DESC)
        .addIndex('idx_hour_index', ['hour_index'], false, lf.Order.DESC)
        .addIndex('idx_minute_index', ['minute_index'], false, lf.Order.DESC)
        .addIndex('idx_ac_connected_bool', ['ac_connected_bool'], false, lf.Order.DESC)

    schemaBuilder.createTable('BatteryProfile')
        .addColumn('id', lf.Type.INTEGER)
        .addColumn('estimated_power_consume_w', lf.Type.INTEGER)
        .addColumn('estimated_power_save_w', lf.Type.INTEGER)
        .addColumn('ac_connected_prob_percent', lf.Type.INTEGER)
        .addColumn('app_running_prob_percent', lf.Type.INTEGER)
        .addColumn('computer_running_prob_percent', lf.Type.INTEGER)
        .addColumn('day_of_week', lf.Type.STRING)
        .addColumn('hour_index', lf.Type.INTEGER)
        .addColumn('minute_index', lf.Type.INTEGER)
        .addColumn('is_checked', lf.Type.BOOLEAN)
        .addPrimaryKey(['id'], true)
        .addIndex('idx_day_of_week', ['day_of_week'], false, lf.Order.DESC)
        .addIndex('idx_hour_index', ['hour_index'], false, lf.Order.DESC)
        .addIndex('idx_minute_index', ['minute_index'], false, lf.Order.DESC)

    schemaBuilder.createTable('Running')
        .addColumn('id', lf.Type.INTEGER)
        .addColumn('app_running_bool', lf.Type.BOOLEAN)
        .addColumn('computer_running_bool', lf.Type.BOOLEAN)
        .addColumn('auto_start_set_bool', lf.Type.BOOLEAN)
        .addColumn('day_of_week', lf.Type.STRING)
        .addColumn('hour_index', lf.Type.INTEGER)
        .addColumn('minute_index', lf.Type.INTEGER)
        .addColumn('time', lf.Type.DATE_TIME)
        .addPrimaryKey(['id'], true)
        .addIndex('idx_day_of_week', ['day_of_week'], false, lf.Order.DESC)
        .addIndex('idx_hour_index', ['hour_index'], false, lf.Order.DESC)
        .addIndex('idx_minute_index', ['minute_index'], false, lf.Order.DESC)
        .addIndex('idx_app_running_bool', ['app_running_bool'], false, lf.Order.DESC)
        .addIndex('idx_computer_running_bool', ['computer_running_bool'], false, lf.Order.DESC)

    schemaBuilder.createTable('Location')
        .addColumn('id', lf.Type.INTEGER)
        .addColumn('country_code', lf.Type.STRING)
        .addColumn('ip', lf.Type.STRING)
        .addColumn('zip_code', lf.Type.STRING)
        .addColumn('latitude', lf.Type.NUMBER)
        .addColumn('longitude', lf.Type.NUMBER)
        .addColumn('accuracy', lf.Type.INTEGER)
        .addColumn('time', lf.Type.DATE_TIME)
        .addColumn('day_of_week', lf.Type.STRING)
        .addColumn('hour_index', lf.Type.INTEGER)
        .addColumn('minute_index', lf.Type.INTEGER)
        .addNullable(['country_code', 'zip_code', 'accuracy', 'ip'])
        .addPrimaryKey(['id'], true)
        .addIndex('idx_day_of_week', ['day_of_week'], false, lf.Order.DESC)
        .addIndex('idx_hour_index', ['hour_index'], false, lf.Order.DESC)
        .addIndex('idx_minute_index', ['minute_index'], false, lf.Order.DESC)
        .addIndex('idx_accuracy', ['accuracy'], false, lf.Order.DESC)
        .addIndex('idx_zip_code', ['zip_code'], false, lf.Order.DESC)

    schemaBuilder.createTable('LocationProfile')
        .addColumn('id', lf.Type.INTEGER)
        .addColumn('latitude', lf.Type.NUMBER)
        .addColumn('longitude', lf.Type.NUMBER)
        .addColumn('accuracy', lf.Type.INTEGER)
        .addColumn('day_of_week', lf.Type.STRING)
        .addColumn('hour_index', lf.Type.INTEGER)
        .addColumn('minute_index', lf.Type.INTEGER)
        .addColumn('zip_code', lf.Type.STRING)
        .addColumn('presented_in_location_prob_percent', lf.Type.INTEGER)
        .addColumn('is_checked', lf.Type.BOOLEAN)
        .addNullable(['accuracy', 'zip_code'])
        .addPrimaryKey(['id'], true)
        .addIndex('idx_day_of_week', ['day_of_week'], false, lf.Order.DESC)
        .addIndex('idx_hour_index', ['hour_index'], false, lf.Order.DESC)
        .addIndex('idx_minute_index', ['minute_index'], false, lf.Order.DESC)

}
